#!/bin/bash

## 组件版本
export set_ver_nginx=1.26.2
export set_ver_openssl=3.3.2
export set_ver_zlib=1.3.1


## 依赖组件
echo "安装Nginx依赖组件..."
apt install -y openssl libxml2 sqlite libpcre2-dev
sleep 6

. /root/hazx/buildvar.sh

## 准备Nginx-Hpack-Encode
cd /root/hazx/src/
unzip nginx-hpack-encode.zip
arch=$(uname -p)
if [[ $arch == "x86_64" ]] || [[ $arch == "amd64" ]];then
    wget https://go.dev/dl/go1.22.3.linux-amd64.tar.gz
    tar zxvf go1.22.3.linux-amd64.tar.gz
elif [[ $arch == "aarch64" ]] || [[ $arch == "arm64" ]];then
    wget https://go.dev/dl/go1.22.3.linux-arm64.tar.gz
    tar zxvf go1.22.3.linux-arm64.tar.gz
fi
export PATH=$PATH:/root/hazx/src/go/bin
cd /root/hazx/src/nginx-hpack-encode
go mod tidy
export server_name_hpack=$(go run nginx-hpack-encode.go ${set_server_name:-HMengine})
sleep 6

## 处理源码
cd /root/hazx/src
tar zxvf nginx-${set_ver_nginx}.tar.gz
tar zxvf openssl-${set_ver_openssl}.tar.gz
tar zxvf zlib-${set_ver_zlib}.tar.gz

## 配置Nginx
echo "配置Nginx..."
cd /root/hazx/src/nginx-${set_ver_nginx}/
./configure \
    --prefix=/web_server \
    --with-openssl=/root/hazx/src/openssl-${set_ver_openssl} \
    --with-zlib=/root/hazx/src/zlib-${set_ver_zlib} \
    --with-http_ssl_module \
    --with-http_sub_module \
    --with-http_stub_status_module \
    --with-http_secure_link_module \
    --with-pcre \
    --with-pcre-jit \
    --with-http_realip_module \
    --with-http_dav_module \
    --with-http_v2_module \
    --with-stream \
    --with-stream_ssl_module

## 修改特征
sed -i "s/\"${set_ver_nginx}\"/\"\"/" src/core/nginx.h
sed -i "s/\"nginx\/\"\ NGINX_VERSION/\"${set_server_name:-HMengine}\"/" src/core/nginx.h
sed -i "s/\"NGINX\"/\"${set_server_name:-HMengine}\"/" src/core/nginx.h
sed -i "s/nginx\"\ CRLF/${set_server_name:-HMengine}\"\ CRLF/" src/http/ngx_http_header_filter_module.c
sed -i "s/nginx<\/center>/${set_server_name:-HMengine}<\/center>/" src/http/ngx_http_special_response.c
sed -i "s/nginx\:/${set_server_name:-HMengine}\:/" src/os/unix/ngx_setproctitle.c
server_name_len=$(echo $server_name_hpack | grep -o '\x' | wc -l)
server_name_hpack_escape=$(printf "%s" "$server_name_hpack" | sed "s/\\\x/\\\\\\\x/g")
sed -i "s/nginx\[5\]/nginx\[${server_name_len}\]/" src/http/v2/ngx_http_v2_filter_module.c
sed -i "s/\\\x84\\\xaa\\\x63\\\x55\\\xe7/${server_name_hpack_escape}/" src/http/v2/ngx_http_v2_filter_module.c
sed -i "s/\"nginx\"/\"${set_server_name:-HMengine}\"/g" src/http/v3/ngx_http_v3_filter_module.c
sleep 6

## 编译Nginx
echo "开始编译Nginx..."
make -j${set_make_threads:-2}
make install
mv /web_server/sbin/nginx /web_server/sbin/fe
sleep 6

## 处理配置文件
rm -fr /web_server/conf
mv /root/hazx/conf /web_server/conf
mkdir -p /web_server/conf/vhost

## 处理默认网页文件
rm -fr /web_server/html
mv /root/hazx/html /web_server/html
sed -i "s/server_name_web/${set_server_name_page:-HMengine}/" /web_server/html/index.html


sleep 6

